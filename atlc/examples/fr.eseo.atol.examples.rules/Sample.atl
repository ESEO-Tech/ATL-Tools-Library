-----------------------------------------------------------------
--  Copyright (C) 2020 ESEO, Université d'Angers 
--
--  This program and the accompanying materials are made
--  available under the terms of the Eclipse Public License 2.0
--  which is available at https://www.eclipse.org/legal/epl-2.0/
--
--  Contributors:
--    - Frédéric Jouault
--    - Théo Le Calvar
--
--  version 1.0
--
--  SPDX-License-Identifier: EPL-2.0
------------------------------------------------------------------

module UMLClassDiagram2JavaFX;
create OUT : JFX from IN : UML;

rule Package2Rectangle {
	from
		p : UML!Package
	to
		r : JFX!Rectangle (
			fill <- 'lightblue',
			stroke <- 'black'
		),
		t : JFX!Text (
			stroke <- 'black',
			text <- p.name,
			origin <- #TOP
		)
		,constraints : Constraints!ConstraintGroup (
			constraints <- Sequence {	
				r.topLeft.stay(#medium, 90, 120),
				t.topLeft = r.topLeft.dx(5),
				r.width >= 100,
				r.height >= 100,
				r.contains(p.packagedElement) 
			}
		)
}

rule Class2Rectangle {
	from
		c : UML!Class
	to
		r : JFX!Rectangle (
			fill <- 'white',
			stroke <- 'black'
		),
		t : JFX!Text (
			stroke <- 'black',
			text <- c.name,
			origin <- #TOP
		)
		,constraints : Constraints!ConstraintGroup (
			constraints <- Sequence {	
				r.topLeft.stay(#medium, 350, 350),
				r.height.minimize(#medium),
				r.height >= 25,
				r.width >= t.width + thisModule.CLASS_NAME_OFFSET * 2,
				r.width.minimize(#medium),
				t.bottomLeft.x >= r.topLeft.x + thisModule.CLASS_NAME_OFFSET,
				t.bottomLeft.x >= r.topLeft.x + (r.width - t.width) / 2,
				t.topLeft.y = r.topLeft.y + thisModule.CLASS_MARGIN,
				r.bottomRight.y >= t.bottomRight.y
			}
		)
}

rule Association2Line {
	from
		a : UML!Association
	to
		l : JFX!Line (
			stroke <- 'black'
		)
		,constraints : Constraints!ConstraintGroup (
			constraints <- Sequence {	
				a.memberEnd->first().type.contains(l.start),
				a.memberEnd->last().type.contains(l.end),
				l.start.minimizeDistance(l.end, #weak),
				l.start.minimizeDistance(a.memberEnd->last().type.center, #weak),
				l.start.minimizeDistance(a.memberEnd->first().type.center, #weak)
			}
		)
}

